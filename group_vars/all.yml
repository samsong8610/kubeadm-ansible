# Ansible
ansible_user: root

# Docker
docker_version: 18.06

# Kubernetes
kube_version: v1.15.3
token: b0f7b8.8d1767876297d85c
image_repository: gcr.azk8s.cn/google_containers

# 1.8.x feature: --feature-gates SelfHosting=true
init_opts: ""

# Loadbalancer IP for apiserver
apiserver_loadbalancer_address: "10.254.192.55"

# Any other additional opts you want to add..
kubeadm_opts: ""
# For example:
# kubeadm_opts: '--apiserver-cert-extra-sans "k8s.domain.com,kubernetes.domain.com"'

service_cidr: "10.96.0.0/12"
pod_network_cidr: "10.244.0.0/16"

calico_etcd_service: "10.96.232.136"

# Network implementation('flannel', 'calico')
network: yh-vpc

# Change this to an appropriate interface, preferably a private network.
# For example, on DigitalOcean, you would use eth1 as that is the default private network interface.
network_interface: "eth1"

enable_dashboard: yes

# A list of insecure registries you might need to define
# insecure_registries: []
insecure_registries: ['gcr.io', registry.yonghui.cn]

systemd_dir: /lib/systemd/system
system_env_dir: /etc/sysconfig
network_dir: /etc/kubernetes/network
kubeadmin_config: /etc/kubernetes/admin.conf
kube_addon_dir: /etc/kubernetes/addon

# Additional feature to install
additional_features:
  helm: false
  metallb: false
  healthcheck: false

# temporary directory used by additional features
tmp_dir: /tmp/kubeadm-ansible-files

# Custom repository
repository:
  aliyun: true

mount_data_block: True
data_block_device: /dev/vdb
data_fs_type: ext4
data_mount_point: /data

# Use ansible inventory hostname instead system hostname
override_system_hostname: True